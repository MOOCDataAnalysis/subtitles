1
00:00:00,659 --> 00:00:03,350
तो हम बेकन संख्या का गणना की है
पिछले वीडियो में

2
00:00:03,350 --> 00:00:07,660
एक्सेल में, जो  संभव है, लेकिन बहुत  प्रयास
लेता है, 

3
00:00:07,660 --> 00:00:11,660
यह मुझे स्वीकार करने मैं डर नहीं है,
के मुझे पाँच घंटे लगे बनाने के लिए 

4
00:00:11,660 --> 00:00:15,620
यह समाधान, और मैं, एक्सेल के साथ काफी काम कर रहा हूँ  

5
00:00:15,620 --> 00:00:20,289
तो आप चाहते हैं यह वैसा समाधान नहीं है। असल में,
मैं आशा करता हूँ कि  

6
00:00:20,289 --> 00:00:26,039
आपके अपने मन में ऐसा कुछ होना : 
'ऊईईी , एक्सेल नहीं अलार्म!'

7
00:00:26,039 --> 00:00:29,420
यदि हां, अपने दैनिक जीवन में, आप कर रहे हैं एक
समाधान 

8
00:00:29,420 --> 00:00:33,350
कि आप और अधिक लेते है और 10 VLOOKUPs 
एक साथ रखते है , 

9
00:00:33,350 --> 00:00:36,820
तो कुछ गड़बड़ है | आपको वास्तव में 
सोचना चाहिए   :  

10
00:00:36,820 --> 00:00:40,649
मैं इस काम के लिए सही उपकरण का उपयोग कर रहा हूँ, 

11
00:00:40,649 --> 00:00:44,660
यह करने के सबसे अच्छा तरीका है अब भी यह है? तो
बेशक फिर सवाल उठता है - 

12
00:00:44,660 --> 00:00:48,559
हमे क्या इस्तेमाल करना चाहिए? एक बेहतर उपकरण क्या है
उपयोग करने के लिए 

13
00:00:48,559 --> 00:00:52,680
एक स्प्रेडशीट की तुलना में? 
प्रोग्रामिंग के बारे में क्या? 

14
00:00:52,680 --> 00:00:57,120
आप एक प्रोग्रामिंग भाषा उपयोग करते हैं तो यह आसान है,  
क्योंकि आप प्रोग्रामिंग के साथ 

15
00:00:57,120 --> 00:00:58,550
सीमित नहीं हैं
 
16
00:00:58,550 --> 00:01:03,140
एक्सेल की पंक्तियों और स्तंभों में, आप कर सकते हैं
कुछ भी जो आप चाहते हैं । 

17
00:01:03,140 --> 00:01:08,500
यह एक अच्छा समाधान हो सकता है जहां समस्या में,
एक्सेल पूरी तरह से फिट नहीं है। 

18
00:01:08,500 --> 00:01:12,080
फिर भी, मैं थोड़ा हॉबिट की तरह हूँ 

19
00:01:12,080 --> 00:01:16,550
मुझे अपने सहज शायर में रहना पसंद है 
हम छोड़ना नहीं चाहते है ,

20
00:01:16,550 --> 00:01:21,110
अपने सहज एक्सेल घर, जाने के लिए
प्रोग्रामिंग भाषा में   

21
00:01:21,110 --> 00:01:27,070
वह से मैं परिचित नहीं हूँ।  बेशक हम कर सकते थे
VB का उपयोग 

22
00:01:27,070 --> 00:01:30,850
Visual Basic for Applications  एक
अंतर्निहित प्रोग्रामिंग भाषा है

23
00:01:30,850 --> 00:01:35,380
Excel में ही, हो सकता है आप काम किया है
पहले इसके साथ,

24
00:01:35,380 --> 00:01:38,040
और यह आप एक प्रोग्रामिंग भाषा के रूप में उपयोग कर 
सकते हैं अपने 

25
00:01:38,040 --> 00:01:41,310
स्प्रेडशीट स्वचालित करने के लिए
गणना करने के लिए,

26
00:01:41,310 --> 00:01:43,590
यदि आप एक सूत्र के साथ नहीं कर सकता है। यह है
एक 

27
00:01:43,590 --> 00:01:45,160
संभावना, अगर आप काम करे है

28
00:01:45,160 --> 00:01:46,380
VBA के साथ, पहले 

29
00:01:46,380 --> 00:01:49,820
मैं फिर से आप को चुनौती देती हुं, हल करने के लिए प्रयास करने के लिए
बेकन पहेली,  

30
00:01:49,820 --> 00:01:52,920
VBA के साथ, यह एक बहुत आसान होना चाहिए  

31
00:01:52,920 --> 00:01:58,570
सूत्रों का उपयोग की तुलना में। हालांकि, यह नहीं है
जो हम इस पाठ्यक्रम में उपयोग करने जा रहे हैं।
 
32
00:01:58,570 --> 00:02:01,900
हम स्प्रेडशीट स्वचालित करने के लिए उपयोग करने जा रहे हैं
एक भाषा,   

33
00:02:01,900 --> 00:02:07,180
पाइथन | तो, क्यों पाइथन ? मैं अजगर का उपयोग करना पसंद करती हु
इसके कारणों में से एक है

34
00:02:07,180 --> 00:02:09,850
यह वर्तमान में नंबर एक 
प्रोग्रामिंग भाषा है

35
00:02:09,850 --> 00:02:12,410	
जो विश्वविद्यालयों में पढ़ाया जाता है। तो कुछ ही वर्षों में  

36
00:02:12,410 --> 00:02:16,330
बहुत से लोग वहाँ हो जाएगा दुनिया भर में, जो जानते हैं  
प्रोग्रामिंग कैसे किया जाता है

37
00:02:16,330 --> 00:02:17,710
पाइथन में |

38
00:02:17,710 --> 00:02:21,130
यह भी काफी आसान है, आप देखेंगे
कि 

39
00:02:21,130 --> 00:02:25,270
इस वीडियो में उदाहरणों, वाक्य रचना,
प्रोग्रामिंग भाषा में लिखना 

40
00:02:25,270 --> 00:02:30,300
काफी आसान है, और एक बड़ा पाइथन के आसपास
पारिस्थितिकी तंत्र है , इसका मतलब है 

41
00:02:30,300 --> 00:02:30,630
कि, 

42
00:02:30,630 --> 00:02:34,940
बहुत से छोटे पाइथन कार्यक्रमों,  कहा जाता है पुस्तकालयों,
दुनिया में मौजूद हैं

43
00:02:34,940 --> 00:02:38,140
समस्याओं को हल करने के लिए, और अगर आपके इस तरह के
समस्या हैं, 

44
00:02:38,140 --> 00:02:41,910
आपको पाइथन में अपने आप लिखने की जरूरत नहीं है, 
आप सिर्फ कार्यक्रमों का उपयोग कर सकते हैं

45
00:02:41,910 --> 00:02:45,280
जो अन्य लोगों पहले से ही बनाया है। तो
इन सब कारणों हैं

46
00:02:45,280 --> 00:02:50,370
हम VBA से अधिक पायथन पसंद करते हैं, लेकिन VBA भी
एक अच्छा प्रोग्रामिंग भाषा है   

47
00:02:50,370 --> 00:02:53,530
जो आप निश्चित रूप से इस प्रकार के समस्या के लिए 
उपयोग कर सकते हैं ।
 
48
00:02:54,080 --> 00:02:56,460
लेकिन, अगर हम पायथन का उपयोग करना चाहते हैं, 

49
00:02:56,470 --> 00:03:00,520
क्या मेरा अपने स्प्रेडशीट घर से दूर जाना होगा? 
आप ऐसा कर सकते हैं। 

50
00:03:00,520 --> 00:03:05,470
आप पाइथन का उपयोग कर सकते हैं, Excel से पूरी तरह से अलग  
लेकिन फिर आपको बहुत कुछ सीखना है, 

51
00:03:05,470 --> 00:03:11,340
आपको अपने डेटा को स्थानांतरित करना है
शायद एक पाठ फ़ाइल में स्प्रेडशीट से , इसलिए ...  

52
00:03:11,340 --> 00:03:14,490
मैं नहीं चाहती हूँ , मैं चाहती हूँ 
पायथन और एक्सेल,
 
53
00:03:14,490 --> 00:03:17,520
वे दोनों।  सौभाग्य से, एक समाधान है। 

54
00:03:17,520 --> 00:03:23,100
कहा जाता है कि एक अच्छा कार्यक्रम है DataNitro 
आपको पाइथन का उपयोग करने की अनुमति देता है 

55
00:03:23,100 --> 00:03:28,860
एक्सेल में।  ज्यादातर VBA के तरह, आप स्क्रिप्ट कर सकते हैं
पाइथन के साथ अपने स्प्रेडशीट। 

56
00:03:29,420 --> 00:03:32,560
यह समाधान दुर्भाग्य से केवल
Windows के लिए उपलब्ध है, 

57
00:03:32,560 --> 00:03:37,060
लेकिन Mac और Linux के लिए और विकल्प हैं ,  
हम विकल्प के लिए लिंक डाल देंगे 

58
00:03:37,060 --> 00:03:40,069
पाठ्यक्रम पेज पर। तो चलिए उपयोग करने की कोशिश करते हैं  

59
00:03:40,069 --> 00:03:44,290
DataNitro, यहाँ आप , इसे देख सकते हैं अगर
आप के एक गहरी नजर है 

60
00:03:44,290 --> 00:03:48,150
आप स्क्रीनशॉट में देखा है कि
पिछले वीडियो में से एक में 

61
00:03:48,150 --> 00:03:53,400
एक DataNitro प्लगइन वहां था। तो,
यह, एक्सेल में अभी भी वहीं है  

62
00:03:53,400 --> 00:03:57,420
और यदि आप जाते हैं,  अगर आप जायें 
वर्कशीट पर, चलिए इसे क्लिक करते हैं,

63
00:03:57,420 --> 00:04:01,790
यदि आप पाइथन शैल क्लिक करते हैं, आपको कुछ मिलता है
एक कैलकुलेटर की तरह जहां आप 

64
00:04:01,790 --> 00:04:04,209
टाइप कर सकते हैं सूत्र, 3 + 5 की तरह 

65
00:04:04,209 --> 00:04:08,250
आप Excel में सूत्र टाइप कर सकते हैं, 
लेकिन आप यह संदर्भित भी कर सकते 

66
00:04:08,250 --> 00:04:12,160
स्प्रेडशीट के साथ। आप कुछ कर सकते हैं
C 2 + 5 की तरह,  

67
00:04:12,160 --> 00:04:16,959
लेकिन आप C 2 नहीं करते हैं जैसा आप करते हैं
एक्सेल में, आपको सीधे कॉल करने है  

68
00:04:16,959 --> 00:04:18,389
मूल्य। तो आप देखते हैं,  

69
00:04:18,389 --> 00:04:21,910
कहते हैं, C2 पर मुझे सेल देना, मूल्य, 

70
00:04:21,910 --> 00:04:25,090
और यह करने के लिए 5 जोड़ें। और यह बस 
पढ़ना नहीं है,

71
00:04:25,090 --> 00:04:25,570
आप कर सकते हैं 

72
00:04:25,570 --> 00:04:29,950
स्प्रेडशीट के लिए लिख सकते हैं, जैसे आप मुझे 
यहाँ देख सकते हैं। चलिए डालते हैं: "हैलो!"

73
00:04:29,950 --> 00:04:33,870
A1 में और उसके बाद आप देखते हैं कि न सिर्फ
A1 बदल गया है, 

74
00:04:33,870 --> 00:04:37,600
बल्कि सभी मूल्यों भी जो यह पर निर्भर है।  
तो क्या आप फिर एक मूल्य बदल सकते हैं और 

75
00:04:37,600 --> 00:04:41,540
स्प्रेडशीट गणना शुरू होता है 
और सब कुछ पुनर्गणना करता है। 

76
00:04:41,540 --> 00:04:45,220
लेकिन हम जल्दी से केविन बेकन के लिए इसे वापस डाल देते हैं 
क्योंकि, अन्यथा, हमारे अच्छा  

77
00:04:45,220 --> 00:04:48,060
बेकन कैलकुलेटर गड़बड़ होता है |

78
00:04:48,060 --> 00:04:51,870
तो यह एक अच्छा समाधान लगता है जो
हमें मदद कर सकता है 

79
00:04:51,870 --> 00:04:56,470
पाइथन के साथ हमारे बेकन समस्या को हल करने के लिए,
और हम ऐसा करने जा रहे हैं 

80
00:04:56,470 --> 00:04:57,690
अगले वीडियो में।

