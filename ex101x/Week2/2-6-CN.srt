1
00:00:01,062 --> 00:00:03,102
嗨，在之前的视频里

2
00:00:03,340 --> 00:00:06,920
我告诉过你在两种情况下 VLOOKUP函数不是

3
00:00:07,043 --> 00:00:08,022
完美的解决方案。

4
00:00:08,022 --> 00:00:12,024
第一，如果你需要的是速​​度，和第二， 如果你想要查找

5
00:00:12,024 --> 00:00:16,544
返流，这对于VLOOKUP函数来说是个奇怪的方向。

6
00:00:16,880 --> 00:00:19,904
所以，在这个视频，我要告诉你

7
00:00:20,015 --> 00:00:24,046
如何解决这种情况，我将教你两种新方法

8
00:00:24,200 --> 00:00:28,380
来解決这个问题。 但首先，让我们退一步，用时光机器

9
00:00:28,580 --> 00:00:32,480
回到第二个视频中， 我谈到了

10
00:00:32,480 --> 00:00:33,920
lookup函数

11
00:00:34,019 --> 00:00:37,419
的要素。 就是：我要寻找什么，

12
00:00:37,420 --> 00:00:41,960
我寻找的范围是什么，我要取回什么。

13
00:00:42,760 --> 00:00:45,660
这是VLOOKUP函数里

14
00:00:45,760 --> 00:00:50,080
的三个要素。 现在我们要使用两个新函数

15
00:00:50,084 --> 00:00:53,924
我们要分开这两个部分，所以 我们用一个函数

16
00:00:54,069 --> 00:00:58,569
查找值，一个函数 返回一个值。

17
00:00:59,220 --> 00:01:02,239
对于查找值，我们要使用

18
00:01:02,239 --> 00:01:06,006
MATCH函数，在这个视频里，我会告诉你它如何工作。

19
00:01:06,006 --> 00:01:09,010
我们输入“MATCH”，我们使用MATCH 函数，

20
00:01:09,046 --> 00:01:13,065
我们输入我们需要查找的内容， 第二个参数

21
00:01:13,065 --> 00:01:18,540
代表我会在哪里查找它。 第三个参数非常相似于

22
00:01:18,540 --> 00:01:20,940
VLOOKUP函数里的第四个参数，可以说

23
00:01:21,013 --> 00:01:24,213
我想有一个更高精度的值

24
00:01:24,220 --> 00:01:27,920
或更低的值。 在这我们选了精确值， 很像

25
00:01:28,029 --> 00:01:31,009
VLOOKUP的FALSE选项。 所以 你看

26
00:01:31,009 --> 00:01:38,589
木工锤，A0，是在第二行。 这不是很直观，所以让我

27
00:01:38,759 --> 00:01:42,056
在ProductInfo
工作表上排序，这样就可以看到MATCH是怎么工作的。 所以我们现在将它排序

28
00:01:42,056 --> 00:01:43,436


29
00:01:43,619 --> 00:01:47,003
A0在第六行，我们的 MATCH函数

30
00:01:47,003 --> 00:01:50,035
的确返回了A0代码，就在

31
00:01:50,035 --> 00:01:53,755
第6行。 这就是Match函数的

32
00:01:54,027 --> 00:01:57,767
功能 - 在一个给定的范围内它告诉你

33
00:01:58,007 --> 00:02:01,093
一个给定值是在哪一行上。 因此，我们就完成了我们新使用场景

34
00:02:01,260 --> 00:02:06,000
第一个部分 那第二部分又是什么呢？ 关于第二部分

35
00:02:06,040 --> 00:02:07,000
我们将要使用的

36
00:02:07,001 --> 00:02:08,065
INDEX函数。

37
00:02:08,074 --> 00:02:11,934
INDEX函数将回传给定的行与列范围

38
00:02:12,054 --> 00:02:17,056
的数据给我们。 所以在这里你可以看看它的形式。

39
00:02:17,056 --> 00:02:20,736
同样，我们知道，A0是在 第六列中，

40
00:02:21,014 --> 00:02:24,028
但我们希望要的是名称而不是 的代码。

41
00:02:24,028 --> 00:02:30,032
因此，我们回到我们原来的公式，
我们删除了MATCH函数，我们使用了

42
00:02:30,032 --> 00:02:33,043
“CTRL X”把它放到剪切板上。 我们放入 INDEX函数。

43
00:02:33,480 --> 00:02:37,015
我们要返回什么呢？ 我们要返回B列。

44
00:02:37,380 --> 00:02:41,012
这是第一个参数，我们要返回的内容，哪一

45
00:02:41,012 --> 00:02:44,038
行。 嗯，我们知道哪一行。 我们刚刚

46
00:02:44,038 --> 00:02:48,079
查找到数值的那一行。 哪一列？ B是唯一的那一列

47
00:02:48,079 --> 00:02:52,759
所以我们只要在那输入1。
所以，现在你发现我们在刚配对的地方让名称与

48
00:02:53,013 --> 00:02:56,072
值产生关联，

49
00:02:56,072 --> 00:02:59,099
而且，正如你所看到，

50
00:02:59,099 --> 00:03:03,419
你看道我双击并在上千的行数上

51
00:03:03,640 --> 00:03:06,960
运行此 INDEX-MATCH函数。

52
00:03:07,065 --> 00:03:11,665
你看到的第一个好处 - 速度！ 真的快了很多。

53
00:03:11,880 --> 00:03:14,560
但使用INDEX-MATCH

54
00:03:14,660 --> 00:03:18,000
代替VLOOKUP还有一个好处。 你还记得在这种场景中，

55
00:03:18,055 --> 00:03:21,077
我们的老板进来说：“嘿，我 希望

56
00:03:21,077 --> 00:03:25,197
这些代码与产品能互相关联，

57
00:03:25,300 --> 00:03:25,820
因为我想将他们

58
00:03:26,011 --> 00:03:29,531
输入到收银机，因为我想键入折扣数据“。

59
00:03:29,660 --> 00:03:33,722
我们现在可以解决这个问题。 我们用VLOOKUP，鍵入-1。

60
00:03:34,016 --> 00:03:38,002
让我们把这这删除掉，在这里我们使用INDEX-MATCH。

61
00:03:38,002 --> 00:03:41,622
我想先从MATCH部分开始因为它更容易除错，

62
00:03:41,780 --> 00:03:44,980
它更容易看到，如果匹配 是行不通的，结果会如何。

63
00:03:45,004 --> 00:03:49,011
因此，让我们开始匹配。 我们要去寻找在B栏中的Name

64
00:03:49,047 --> 00:03:52,547
并回传相同匹配数据-就在那！

65
00:03:52,740 --> 00:03:57,220
我们知道这现在木工锤是 在第六行。
所以，我们删除了MATCH，

66
00:03:57,220 --> 00:04:00,540
我们只是暂时删除，现在我们键入 INDEX。

67
00:04:00,540 --> 00:04:03,920
我们要回传什么呢？ Codes！

68
00:04:04,047 --> 00:04:08,007
我们想要返回哪一行？ 嗯，我们都知道 可以输入6，

69
00:04:08,007 --> 00:04:09,280
因为我们知道那一行，

70
00:04:09,280 --> 00:04:12,620
但我们可以在MATCH函数那里输入， 它只有一列，

71
00:04:12,680 --> 00:04:16,540
然后我们用1。
所以你就看到INDEX-MATCH比VLOOKUP好的

72
00:04:16,549 --> 00:04:20,014
的第二点

73
00:04:20,020 --> 00:04:21,440
返回流。

74
00:04:21,440 --> 00:04:24,860
它和我们要返回的内容无关， 在这种情况下，你想返回

75
00:04:25,023 --> 00:04:28,823
隔壁的值，然而我们可以返回任何值！
INDEX-MATCH是非常灵活的，

76
00:04:29,005 --> 00:04:32,013
我们还可以返回，如果我们在这有匹配函数，那么返回

77
00:04:32,085 --> 00:04:36,325
它下面的单元格，或减去三加到右边，还是加在

78
00:04:36,500 --> 00:04:39,580
上面，都没有关系！ INDEX-MATCH

79
00:04:39,680 --> 00:04:42,880
可以返回你想要的任何东西。 因此，在某些方案中

80
00:04:43,012 --> 00:04:47,352
INDEX-MATCH比VLOOKUP更好。 我们下周见！
