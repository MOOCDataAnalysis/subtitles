1
00:00:02,320 --> 00:00:05,970
因此，我们过去几个星期关于电子表格已经探讨了很多，

2
00:00:05,970 --> 00:00:10,290
所以现在是不是该谈谈一些麻烦的问题了：

3
00:00:10,290 --> 00:00:13,360
电子表格的问题 ，因为你一定

4
00:00:13,360 --> 00:00:16,880
在练习或在你的 日常工作的电子表格中遇到过。

5
00:00:16,880 --> 00:00:22,000
你遭遇电子表格问题。
而且，这并不令人惊讶如果你记得第一周中谈到的

6
00:00:22,000 --> 00:00:24,769
95％

7
00:00:24,769 --> 00:00:30,240
的公司仍然使用电子表格，而50％的

8
00:00:30,240 --> 00:00:34,210
电子表格用于决策，

9
00:00:34,210 --> 00:00:35,520
之后必然会有问题出现

10
00:00:35,520 --> 00:00:39,120
也没什么好讶异的。 你也许还记得

11
00:00:39,120 --> 00:00:43,850
电子表格有一个很长的 寿命：平均5年

12
00:00:43,850 --> 00:00:47,430
在此期间，他们会被12 个不同的人使用。

13
00:00:47,430 --> 00:00:51,250
而大部分的电子表格没有适用的说明文档。

14
00:00:51,789 --> 00:00:54,449
所以实际上如果你想想看就会知道

15
00:00:54,449 --> 00:00:59,059
要没有问题是不可能的。 如果企业

16
00:00:59,059 --> 00:01:02,600
与这么多人参与进来，那么必将产生问题

17
00:01:02,600 --> 00:01:04,880
。 而他们的确如此。

18
00:01:05,320 --> 00:01:09,380
甚至有一个叫欧洲电子表格风险

19
00:01:09,390 --> 00:01:14,890
利益小组（EUSPRIG.org）的小组，维护着一份

20
00:01:14,890 --> 00:01:16,070
电子表格事故的清单。

21
00:01:16,070 --> 00:01:19,979
这是很有趣的，如果你在本周的练习后有些时间，

22
00:01:19,979 --> 00:01:22,329
我建议你​​去EUSPRIG.org瞧瞧 ，看看

23
00:01:22,329 --> 00:01:25,450
因为电子表格问题

24
00:01:25,450 --> 00:01:30,150
而遇上或大或小麻烦的

25
00:01:30,150 --> 00:01:33,740
许多公司与组织。 我已经收集了 最有趣的

26
00:01:33,740 --> 00:01:37,220
3 个电子表格事故。 这里有一个

27
00:01:37,220 --> 00:01:38,450
我真的很喜欢，

28
00:01:38,450 --> 00:01:41,970
2012年伦敦奥运会。

29
00:01:41,970 --> 00:01:45,930
你会觉得伦敦奥运会是 当年最大的事件

30
00:01:45,930 --> 00:01:48,219
预算达上亿英镑，

31
00:01:48,219 --> 00:01:52,320
有一个非常复杂的票务 系统。

32
00:01:52,700 --> 00:01:55,900
不不，他们使用电子表格

33
00:01:55,909 --> 00:01:58,390
记录已经售出的门票。 而且他们

34
00:01:58,390 --> 00:02:00,350
在其中一个电子表格里犯了一个小错误

35
00:02:00,350 --> 00:02:03,469
最终导致一个体育场馆 存在

36
00:02:03,469 --> 00:02:06,939
10,000票的超额预定。 所以这不只是

37
00:02:06,939 --> 00:02:08,899
损失了钱，当然也是非常

38
00:02:08,899 --> 00:02:11,250
尴尬的。 人们不得不来到售票处

39
00:02:11,250 --> 00:02:13,760
更换另一天的门票...

40
00:02:13,760 --> 00:02:17,260
所以这是一个电子表格 事故的非常好的例子。

41
00:02:17,260 --> 00:02:21,190
这儿还有一个。 美国的一所大学损失了240万

42
00:02:21,190 --> 00:02:24,250
美元，原因是一个电子表格问题，

43
00:02:24,250 --> 00:02:26,910
这里是另一个案例：一家加拿大电力公司

44
00:02:26,910 --> 00:02:32,550
损失了24亿美元，就因为 电子表格上的复制-粘贴错误 。

45
00:02:34,240 --> 00:02:36,960
所以这很容易怪罪到 电子表格上 ，你可以说

46
00:02:36,960 --> 00:02:40,980
电子表格太坏了，这是 为什么我们会犯错误。 但是，这真的

47
00:02:40,980 --> 00:02:44,660
太不公平，这不是典型的电子表格 问题。

48
00:02:44,660 --> 00:02:48,680
如果你看一下其他领域，例如 编程。

49
00:02:48,680 --> 00:02:51,170
编程的出错率

50
00:02:51,170 --> 00:02:54,910
非常接近于电子表格的发展。 约一至五个 百分点

51
00:02:54,910 --> 00:02:59,060
代码的所有行或所有公式 有一个错误

52
00:02:59,060 --> 00:03:03,110
并且同样适用于其它认知 设计

53
00:03:03,110 --> 00:03:05,700
活动，比如创意写作 。

54
00:03:05,700 --> 00:03:09,600
另外，如果你在书写，你往往会犯下小的笔误。

55
00:03:09,600 --> 00:03:12,780
只是人类的大脑达不到比 1％至5％

56
00:03:12,780 --> 00:03:17,300
更低的差错率，这是可以理解的。 如果你关注

57
00:03:17,300 --> 00:03:21,060
程序设计中的问题，有非常非常 类似类型的

58
00:03:21,060 --> 00:03:24,960
事故存在，最近

59
00:03:24,960 --> 00:03:28,610
在程序设计域中发生。 比如 healthcare.gov，

60
00:03:28,610 --> 00:03:29,700
最近爆出

61
00:03:29,700 --> 00:03:33,340
好几个非常大的漏洞就像“心脏出血漏洞”和“跳转失败漏洞”

62
00:03:33,340 --> 00:03:37,500
所以你不能责怪电子表格 出错，因为

63
00:03:37,500 --> 00:03:42,620
其他类型的编程也会遭遇极其类似的问题。

64
00:03:43,060 --> 00:03:44,530
那么，为什么会这样？

65
00:03:44,530 --> 00:03:49,980
像一切事情一样， 电子表格和软件 产品始于累土。

66
00:03:49,980 --> 00:03:53,060
他们从可爱的小狗开始，你可以

67
00:03:53,060 --> 00:03:57,140
轻松地管理他们，因为他们仍然 年轻简单。

68
00:03:57,140 --> 00:04:00,160
对电子表格来说也一样 ：你开始，创建一个工作表 ，

69
00:04:00,160 --> 00:04:04,570
一堆公式，看起来很可爱， 没出什么问题。

70
00:04:04,570 --> 00:04:08,100
但是，他们都会成长为这个家伙，对不对？

71
00:04:08,100 --> 00:04:11,120
如果你不训练你的狗， 如果你不

72
00:04:11,130 --> 00:04:15,930
管理你的电子表格或软件， 一切都会出问题。

73
00:04:15,930 --> 00:04:18,950
所以，这也正是本周视频

74
00:04:18,950 --> 00:04:23,630
的内容。 我们将探讨如何 管理你的电子表格并确保

75
00:04:23,630 --> 00:04:26,540
它成长为一个负责任的狗

76
00:04:26,540 --> 00:04:29,180
而不是一个咬碎沙发的怪物。
