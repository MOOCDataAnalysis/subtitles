1
00:00:01,160 --> 00:00:04,200
Ahora que ya teneos el problema en
forma de grafos,

2
00:00:04,200 --> 00:00:07,490
podemos comenzar a usar diferentes herramientas,
Así que ya no necesitamos más,

3
00:00:07,490 --> 00:00:13,099
herramientas genéricas. Una hoja de cálculo o
Python son como una navaja Suiza.

4
00:00:13,099 --> 00:00:17,750
Ambos pueden hacer cualquier cosa que queramos, podemos 
utilizarlos para hacer presupuestos o para la planificación,

5
00:00:17,750 --> 00:00:22,970
o para resolver un problema como Bacon. Pero
ahora podemos usar una herramienta

6
00:00:22,970 --> 00:00:24,810
muy especializada en grafos, 
muy parecida a 

7
00:00:24,810 --> 00:00:27,740
las herramientas que usamos para comer 
caracoles. Estas son muy, 

8
00:00:27,740 --> 00:00:32,730
muy útiles si estamos comiendo caracoles,
pero inútiles para comer cualquier

9
00:00:32,730 --> 00:00:35,649
otra cosa, como pasta  o arroz,

10
00:00:35,649 --> 00:00:40,850
son herramientas muy especializadas. Esto
es también lo que es una herramienta para grafos, 

11
00:00:40,850 --> 00:00:44,420
La base de datos de grafos que vamos a usar, 
se llama Neo4j.

12
00:00:44,440 --> 00:00:48,079
Es una base de datos de grafos,
la misma palabra lo dice,

13
00:00:48,079 --> 00:00:51,670
que es utilizada realmente para almacenar 
y analizar grafos.

14
00:00:51,670 --> 00:00:54,989
Así que si descargamos Neo4j, esta es una 
herramienta de libre acceso , que se puede 

15
00:00:54,989 --> 00:00:57,340
descargar para varias plataformas. 

16
00:00:57,340 --> 00:01:00,890
Si así lo haces, y ejecutas la aplicación, 
verás esto.

17
00:01:00,890 --> 00:01:04,360
Sólo esta pequeña caja, ¿Qué hacemos?

18
00:01:04,360 --> 00:01:07,790
Lo primero que tenemos que hacer es seleccionar 
un archivo

19
00:01:07,790 --> 00:01:12,430
en nuestro sistema de archivos, en el que vamos 
a grabar la base de datos, un archivo vacío,

20
00:01:12,430 --> 00:01:13,260
no hay magia.

21
00:01:13,260 --> 00:01:18,800
sólo seleccionamos un archivo y pulsamos Start.
Y esto es lo que obtenemos: la caja verde

22
00:01:18,800 --> 00:01:22,870
con un enlace. Si hacemos click en él, 
nos llevará al navegador web, sólo a un

23
00:01:22,870 --> 00:01:25,220
navegador normal, como Firefos o Chrome,

24
00:01:25,220 --> 00:01:32,220
se iniciará (el navegador normal) y podrás 
ver esto. Eso es , esto es Neo4j.

25
00:01:32,530 --> 00:01:33,820
No está claro, de forma inmediata, 

26
00:01:33,820 --> 00:01:38,000
qué tenemos que hacer aquí. En primer lugar 
vamos a empezar por conseguir nuestros 

27
00:01:38,000 --> 00:01:41,250
datos Bacon en la base de datos. Así que
volvemos a nuestra hoja de datos

28
00:01:41,250 --> 00:01:45,040
y la grabamos como un archivo de 
extensión CSV,

29
00:01:45,040 --> 00:01:50,380
un archivo de valores separados por comas. Este 
es un formato que Neo4j y muchas otras herramientas

30
00:01:50,380 --> 00:01:54,360
pueden leer fácilmente. Probablemente usted ya ha 
hecho esto anteriormente. Click en "Save As" y

31
00:01:54,360 --> 00:01:56,850
seleccionamos la localización en la que 
queremos grabar el archivo CSV,

32
00:01:56,850 --> 00:02:01,280
introducimos un nombre de archivo y a continuación
de la lista desplegable,

33
00:02:01,280 --> 00:02:04,990
seleccionamos CSV. Ahí vamos,

34
00:02:04,990 --> 00:02:09,600
valores separados por comas, Tenemos
un punto más, 

35
00:02:09,600 --> 00:02:12,220
eliminamos el punto y click en "Save".

36
00:02:12,220 --> 00:02:15,230
Y ahora, solamente grabamos ésta hoja,
podemos grabar como CSV,

37
00:02:15,230 --> 00:02:17,810
Excel nos advierte. Nos dice:

38
00:02:17,810 --> 00:02:21,030
Solamente puedo grabar una hoja, 
perdemos las tablas dinámicas.

39
00:02:21,030 --> 00:02:25,250
Sabemos que, estamos de acuerdo con ello, 
queremos grabarla como archivo CSV.

40
00:02:25,250 --> 00:02:27,700
Así que lo que tenemos ahora si abrimos 
el archivo CSV, es este

41
00:02:27,700 --> 00:02:31,860
Así es como vemos el archivo CSV,
si lo abrimos con notepad

42
00:02:31,860 --> 00:02:35,720
o con cualquier otro editor de texto. 
Tenemos una primera línea que es

43
00:02:35,730 --> 00:02:38,850
la primera columna de la hoja de datos,
en este caso película,

44
00:02:38,850 --> 00:02:42,310
y luego tenemos una línea para todas 
las líneas de la hoja de cálculo.

45
00:02:42,310 --> 00:02:45,990
y las columnas están separadas, de hecho, 
por comas,

46
00:02:45,990 --> 00:02:50,460
porque este es un formato de valores separados
por comas. Así que tenemos estos datos.

47
00:02:50,460 --> 00:02:54,090
Ahora tenemos que conseguir estos datos en Neo4J.

48
00:02:54,090 --> 00:02:58,450
Así que vamos a volver a Neo4j, conseguir 
nuestro archivo CSV,

49
00:02:58,450 --> 00:03:03,040
ahí está, y lo que no puede hacer es seleccionar 
los datos y ponerlos en, no podemos simplemente

50
00:03:03,040 --> 00:03:07,819
copiar y pegar. Tenemos que usar un comando especial
llamado LOAD CSV.

51
00:03:07,819 --> 00:03:12,980
Luego escribimos esto en Neo4J, Load CSV

52
00:03:12,980 --> 00:03:15,150
desde la localización en la que justamente

53
00:03:15,150 --> 00:03:19,410
hemos grabado el archivo CSV y entonces, 

54
00:03:19,410 --> 00:03:22,810
para cada línea en el archivo CSV

55
00:03:22,810 --> 00:03:26,810
vamos a realizar una operación específica.
Aquí está la localización

56
00:03:26,810 --> 00:03:27,680
del archivo CSV,

57
00:03:27,680 --> 00:03:31,130
y vamos a abrirlo como una fila

58
00:03:31,130 --> 00:03:34,400
esto quiere decir que vamos a iterar
sobre la hoja de cálculo,

59
00:03:34,400 --> 00:03:37,950
sobre el fichero CSV, y cada línea 
es llamada fila

60
00:03:37,950 --> 00:03:41,540
Y esto es muy parecido al bucle for 
en Python donde tenemos un

61
00:03:41,540 --> 00:03:45,930
iterador "i" que primero tiene el valor 1
y después el 2 y después el 3, 

62
00:03:45,930 --> 00:03:49,430
esto es también lo que le pasa a la fila. 
Entonces, ¿qué vamos a hacer

63
00:03:49,430 --> 00:03:53,770
para cada una de las filas? Vamos a crear algo
que es una película, 

64
00:03:53,770 --> 00:03:57,069
vamos a crear una película y el nombre 
de la película

65
00:03:57,069 --> 00:04:02,209
es 'row.movie'. que es la primera columna,
en este caso, la única columna de nuestro

66
00:04:02,209 --> 00:04:04,540
fichero CSV. Así que podemos ejecutar esto 

67
00:04:04,540 --> 00:04:07,910
pulsando el botón Play y a continuación
Neo4J dice: okay, 

68
00:04:07,910 --> 00:04:12,260
He creado cuatro nodos. Realmente
no conocemos que ha sucedido,

69
00:04:12,260 --> 00:04:17,769
pero algo ha sucedido, porque hemos creado
cuatro nodos.

70
00:04:17,769 --> 00:04:20,310
Así que, lo que podemos hacer ahora, 
es obtener los nodos fuera.

71
00:04:20,310 --> 00:04:24,190
No voy a explicar toda la sintaxis de
este lenguaje, 

72
00:04:24,190 --> 00:04:27,520
este lenguaje se denomina Cypher por 
cierto, voy a mostrarles

73
00:04:27,520 --> 00:04:32,030
unas pocas cosas que necesitarás saber para resolver 
este ejemplo, pero vamos a poner enlaces en línea

74
00:04:32,030 --> 00:04:36,020
al material de referencia, donde podrás
aprenderlo todo acerca de Cypher.

75
00:04:36,020 --> 00:04:40,790
Entonces, ¿cómo vamos a obtener los nodos fuera?
Hay un comando especial denominado MATCH

76
00:04:40,790 --> 00:04:44,730
y ese comando significa buscar todos los nodos.
Así que en este caso decimos:

77
00:04:44,730 --> 00:04:48,680
emparejamos sólo un nodo "n", de cualquier 
nodo,

78
00:04:48,680 --> 00:04:51,510
y nos retornamos eso. Ahora vemos
los cuatro

79
00:04:51,510 --> 00:04:53,700
nodos que habíamos introducido en 

80
00:04:53,700 --> 00:04:54,400
la base de datos,

81
00:04:54,400 --> 00:04:59,260
vemos que son las películas y tienen las 
etiquetas que se encontraban en el archivo CSV.

82
00:04:59,260 --> 00:05:03,000
Podemos cambiar un poco el diseño, 
podemos decir que las etiquetas

83
00:05:03,000 --> 00:05:07,060
deben ser el nombre de la película y 
podemos jugar con el tamaño de los nodos.

84
00:05:07,060 --> 00:05:10,440
Así que sé que es más fácil ver que en verdad 
tenemos las 4 películas

85
00:05:10,440 --> 00:05:15,000
en nuestra base de datos Neo4j,
que estaban en nuestro archivo CSV.

86
00:05:15,000 --> 00:05:17,000
Están ahí, pero lo que también se puede 
ver es que

87
00:05:17,000 --> 00:05:19,160
esta es una herramienta que se hizo para 
los gráficos.

88
00:05:19,160 --> 00:05:22,590
Si simplemente digo: dame todo lo que 
está en la base de datos

89
00:05:22,590 --> 00:05:26,430
la forma neutral, la normal, no es una lista

90
00:05:26,430 --> 00:05:29,210
como puedes conseguir en una base de datos
normal. No, 

91
00:05:29,210 --> 00:05:30,440
son nuestros pequeños puntos,

92
00:05:30,440 --> 00:05:34,360
los nodos en nuestra base de datos. Y esto nos muestra 
que realmente estamos trabajando con la base

93
00:05:34,360 --> 00:05:35,780
de datos gráficos, algo 

94
00:05:35,780 --> 00:05:39,770
optimizado para pensar en los nodos.
Ahora lo que necesitamos 

95
00:05:39,770 --> 00:05:41,680
además de las películas 

96
00:05:41,680 --> 00:05:42,860
es conseguir los actores.

97
00:05:42,860 --> 00:05:46,350
Para esto, nuevamente podemos 
usar el comando LOAD SCV 

98
00:05:46,350 --> 00:05:50,070
y ahora no estamos creando una película,
estamos creando un actor. Y lo hacemos

99
00:05:50,070 --> 00:05:54,240
realmente diciendo "crea un actor", no
vamos a añadir una etiqueta

100
00:05:54,240 --> 00:05:57,810
"teste es un tipo de actor", no,  
realmente decimos "crea un actor".

101
00:05:57,810 --> 00:06:01,530
Y esto suena un poco críptico tal vez,
pero déjame mostrarte su aspecto,

102
00:06:01,530 --> 00:06:03,960
Si te muestro todos los nodos.

103
00:06:03,960 --> 00:06:06,820
Inicialmente, todos ellos parecen bien 
y ves que

104
00:06:06,820 --> 00:06:09,479
en efecto algunos son un actor y algunos 
son una película.

105
00:06:09,479 --> 00:06:13,699
Pero lo que podemos hacer es de nuevo jugar 
con el diseño. Podemos decir:

106
00:06:13,699 --> 00:06:17,000
queremos que las películas sean verde y 
entonces vemos

107
00:06:17,000 --> 00:06:21,979
que todas las películas son ahora verdes, y
podemos hacer lo mismo para los actores.

108
00:06:21,979 --> 00:06:26,120
Digamos que queremos que los actores que sean de color 
rosa, y ahora se puede ver que realmente tenemos

109
00:06:26,120 --> 00:06:29,690
dos tipos diferentes de nodos en
nuestra base de datos,

110
00:06:29,690 --> 00:06:32,050
películas y actores.

111
00:06:33,260 --> 00:06:34,960
Así que, de hecho, la etapa siguiente

112
00:06:34,960 --> 00:06:38,430
que necesitamos para llevar a cabo, ahora tenemos 
las películas y los actores en nuestra base de datos,

113
00:06:38,430 --> 00:06:42,050
es hacer la conexión. Así que de nuevo, 
hemos ahorrado

114
00:06:42,050 --> 00:06:47,320
la tercera hoja de trabajo de nuestra hoja de cálculo 
como un archivo CSV, donde ahora tenemos dos

115
00:06:47,320 --> 00:06:47,900
columnas.

116
00:06:47,900 --> 00:06:52,270
Una llamada "fullname" y la otra
llamada "movie".

117
00:06:52,270 --> 00:06:55,040
Y ahora, una vez más usamos el comando MATCH

118
00:06:55,040 --> 00:07:00,430
En primer lugar, vamos a cargar el archivo CSV, 
sabemos que esto por ahora, como una fila del archivo CSV,

119
00:07:00,430 --> 00:07:04,000
pero vamos a coincidir de  cada columna, 
el primer elemento

120
00:07:04,000 --> 00:07:08,780
con una actor y el segundo elemento con
una película y es así como se ve.

121
00:07:09,080 --> 00:07:11,660
Decimos NATCH....

122
00:07:12,509 --> 00:07:15,590
Sí, decimos MATCH.....

123
00:07:15,590 --> 00:07:19,580
Ahí está, decimos MATCH, vamos a coincidir

124
00:07:19,580 --> 00:07:23,690
una 'a' es un actor y con qué lo vamos
a hacer coincidir?

125
00:07:23,690 --> 00:07:27,389
Bien, el nombre, el nombre completo del
actor, tiene que ser igual

126
00:07:27,389 --> 00:07:32,740
al nombre que está en la fila de nuestro 
archivo CSV.

127
00:07:32,740 --> 00:07:36,680
Así que también se llama nombre completo, por lo que 
en el primer caso el actor  con el que vamos a

128
00:07:36,680 --> 00:07:39,280
conectar por primera vez
es Kevin Bacon

129
00:07:39,280 --> 00:07:42,840
con la película  Crazy Stupid Love.  
Así que esta primera coincidencia de línea

130
00:07:42,840 --> 00:07:47,930
va a buscar al actor en la primera línea
y la segunda coincidencia que 

131
00:07:47,930 --> 00:07:49,139
estoy haciendo ahora,

132
00:07:49,139 --> 00:07:54,740
está diciendo: estoy buscando una película 
y su nombre tiene que ser igual a la 

133
00:07:54,740 --> 00:07:55,650
columna movie

134
00:07:55,650 --> 00:07:59,669
en mi archivo CSV, la segunda columna, 
después de la coma.

135
00:07:59,669 --> 00:08:03,020
Lo que hacen estas dos primeras cosas es
encontrar una actor

136
00:08:03,020 --> 00:08:06,870
y encontrar una película. Así que si yo también 
tengo aquellos lo que tengo que hacer

137
00:08:06,870 --> 00:08:10,460
es hacer una conexión entre ellos y lo hago 
con un CREATE.

138
00:08:10,460 --> 00:08:13,550
Así como he dicho 'crear un actor "y" 
crear una película',

139
00:08:13,550 --> 00:08:17,919
Ahora estoy creando un vínculo de "a", el actor,

140
00:08:17,919 --> 00:08:20,820
a 'm', la película, y yo estoy dando esa conexión

141
00:08:20,820 --> 00:08:23,440
al nombre. Estoy dándole el nombre 'acted', 
por lo que

142
00:08:23,440 --> 00:08:27,380
'a actuó en m', Kevin Bacon actuó en

143
00:08:27,380 --> 00:08:30,960
Crazy Stupid Love. Y si ejecutamos este
CREATE,

144
00:08:30,960 --> 00:08:36,029
nuevamente Neo4J dice: OK, he creado
un montón de relaciones.

145
00:08:36,029 --> 00:08:39,729
Así que vamos a echar un vistazo a la forma 
en que realmente se visualiza.

146
00:08:39,729 --> 00:08:41,469
Si sólo tengo que utilizar el mismo

147
00:08:41,469 --> 00:08:43,879
'mostrarme todos los nodos', entonces me 
sale un gráfico

148
00:08:43,879 --> 00:08:47,389
instantáneamente. Así que si pongo mis datos  
dentro y 

149
00:08:47,389 --> 00:08:48,850
le digo a  Neo4j

150
00:08:48,850 --> 00:08:53,689
dame los datos, esto es lo que conseguimos, Esto
es automáticamente visualizado como un gráfico

151
00:08:53,689 --> 00:08:57,920
y puedes ver, por supuesto, notamos por ahora, 
que Kevin Bacon ha trabajado en Crazy

152
00:08:57,920 --> 00:08:59,399
Stupid Love con

153
00:08:59,399 --> 00:09:03,119
Julianne Moore. Allí todo está bien 
y se parece mucho a 

154
00:09:03,119 --> 00:09:06,550
la imagen que teníamos en el vídeo anterior 
que estábamos dibujando en

155
00:09:06,550 --> 00:09:07,410
la hoja de cálculo,

156
00:09:07,410 --> 00:09:13,089
conseguimos un gráfico de forma inmediata. 
Así que ya casi estamos allí, ahora tenemos 

157
00:09:13,089 --> 00:09:13,670
la representación correcta.

158
00:09:13,670 --> 00:09:16,790
pero ahora, ciertamente, todavía queremos
realizar el cálculo

159
00:09:16,790 --> 00:09:22,550
del número de Bacon. Así que déjame mostrarte 
cómo va, si utiliza Neo4j.

160
00:09:22,550 --> 00:09:25,139
Así que lo que queremos hacer, es calcular

161
00:09:25,139 --> 00:09:29,189
un camino a través de la gráfica, una serie 
de medidas como las que hicimos

162
00:09:29,189 --> 00:09:31,600
Delft, Rotterdam, Groningen,  ahora
queremos

163
00:09:31,600 --> 00:09:33,209
tener Kevin Bacon

164
00:09:33,209 --> 00:09:37,769
a Julianne Moore. Así que estamos de búsqueda 
de nuevo,estamos buscando en la base de datos, 

165
00:09:37,769 --> 00:09:40,100
pero ahora, no estamos buscando por un nodo, 
estamos buscando por 

166
00:09:40,100 --> 00:09:43,679
un camino a través de los nodos 
desde un actor

167
00:09:43,679 --> 00:09:47,369
con el nombre Kevin Bacon a otro actor

168
00:09:47,369 --> 00:09:50,639
sin un nombre específico, No conocemos 
y el nombre

169
00:09:50,639 --> 00:09:55,519
¿cómo tiene que parecer el camino ? Bueno, 
tiene que haber dos saltos,

170
00:09:55,519 --> 00:09:58,819
un actor, una película, otro actor. y

171
00:09:58,819 --> 00:09:59,899
¿qué queremos devolver?

172
00:09:59,899 --> 00:10:03,929
Si encontramos el camino desde Kevin
Bacon hasta otro actor,

173
00:10:03,929 --> 00:10:08,139
nos gustaría tener el nombre de otro actor
y si ejecutamos este,

174
00:10:08,139 --> 00:10:12,189
de hecho llegamos a todos los actores que 
tienen un número de Bacon 2,

175
00:10:12,189 --> 00:10:16,420
que están a un salto de distancia o en esta
visualización dos saltos de distancia

176
00:10:16,420 --> 00:10:19,429
desde Kevin Bacon. Podemos hacer
lo mismo

177
00:10:19,429 --> 00:10:24,170
para cada actor que tenga un número Bacon 3,
porque entonces necesitamos cuatro saltos.

178
00:10:24,170 --> 00:10:27,129
Funciona. Es así de fácil hacerlo con Neo4j.

179
00:10:27,129 --> 00:10:31,369
El único problema que tenemos aquí, es que 
Scarlett Johansson

180
00:10:31,369 --> 00:10:36,019
se produce dos veces, porque hay dos maneras 
en que podemos llegar a ella desde Kevin Bacon.

181
00:10:36,019 --> 00:10:37,279
Y podemos resolver esto

182
00:10:37,279 --> 00:10:41,449
con una construcción similar que hemos
utilizado en todo el camino recorrido

183
00:10:41,449 --> 00:10:42,410
en el vídeo de las tablas dinámicas.

184
00:10:42,410 --> 00:10:46,249
el DISTINCT. Y si añadimos esto,
conseguimos solo dos

185
00:10:46,249 --> 00:10:49,749
actores con número de Bcon 3. 
Así que ya ves que es sólo

186
00:10:49,749 --> 00:10:53,759
una línea y luego llegamos a todos con 
el número Bacon 2, 

187
00:10:53,759 --> 00:10:54,399
todos con el número Bacon 3

188
00:10:54,399 --> 00:10:58,899
que ya es bastante sorprendente, pero
podemos hacerlo mejor que eso.

189
00:10:58,899 --> 00:10:59,879
Podemos calcular

190
00:10:59,879 --> 00:11:03,420
todos los números Bacon de todos 
con sólo una línea

191
00:11:03,420 --> 00:11:08,499
del código Cypher. Así que lo que
vamos a hacer es, vamos a decir

192
00:11:08,499 --> 00:11:11,350
dame el camino más corto y el
camino más corto 

193
00:11:11,350 --> 00:11:15,800
no es una función que yo haya definido,
esta es justamente una función incorporada en

194
00:11:15,800 --> 00:11:17,730
Cypher. Así que diremos:

195
00:11:17,730 --> 00:11:22,660
dame el camino más corto desde el nodo que 
coincide con Kevin Bacon, que hemos visto que  

196
00:11:22,660 --> 00:11:24,629
en una pregunta anterior,

197
00:11:24,629 --> 00:11:30,360
y lo que quiero es solamente la estrella,
así que no dos pasos o cuatro pasos o

198
00:11:30,360 --> 00:11:34,759
100 pasos, o cualquier número de pasos. No nos 
importa, eso es lo que la pequeña estrella

199
00:11:34,759 --> 00:11:36,069
indica,

200
00:11:36,069 --> 00:11:40,079
y lo que queremos tener a cambio es, de nuevo, 
el nombre del actor,

201
00:11:40,079 --> 00:11:43,959
pero también queremos, porque hemos
llamado a este camino

202
00:11:43,959 --> 00:11:47,550
'p', la longitud del camino. TADA!

203
00:11:47,550 --> 00:11:52,319
Y Ahora sí que quiero conseguir: Kevin Bacon 0, 
porque el camino

204
00:11:52,319 --> 00:11:57,670
desde él hasta él es cero y personas
con el número Bacon 2

205
00:11:57,670 --> 00:12:00,059
tienen dos saltos y el número Bacon 3

206
00:12:00,059 --> 00:12:03,059
tiene cuatro saltos, Así que estamos casi ahí,
sólo queremos que 

207
00:12:03,059 --> 00:12:04,899
Kevin Bacon tenga 1 y todos 

208
00:12:04,899 --> 00:12:06,179
los otros tengan 

209
00:12:06,179 --> 00:12:10,639
dos saltos como uno. De este modo, si lo dividimos
por dos y añadimos uno,

210
00:12:10,639 --> 00:12:14,059
tenemos todos los números de Bacon para todos,

211
00:12:14,059 --> 00:12:16,999
no importa la duración del camino, en

212
00:12:16,999 --> 00:12:21,279
una sola línea de Cypher. ¿No es genial?
Recuerde que la semana pasada, necesitábamos

213
00:12:21,279 --> 00:12:25,879
unas 25 fórmulas matriz, para todos
estos actores y que todavía necesitamos

214
00:12:25,879 --> 00:12:32,629
20, 25 líneaas de código de Python, mientras que aquí
podemos hacerlo todo en una sola línea de Cypher.

215
00:12:32,629 --> 00:12:35,239
Así que no me malinterpreten, 
esto no es un anuncio de Neo4j

216
00:12:35,239 --> 00:12:39,230
No estoy diciendo que Neo4J es 
mejor que Python

217
00:12:39,230 --> 00:12:41,239
o mejor que Excel,

218
00:12:41,239 --> 00:12:43,899
Para algunos problemas que son realmente 
grafía,

219
00:12:43,899 --> 00:12:47,220
Neo4j es una solución muy buena,
pero

220
00:12:47,220 --> 00:12:50,449
como las correas para un caracol, es muy 
específico.

221
00:12:50,449 --> 00:12:55,850
No se puede utilizar para la planificación o 
presupuestación. Sólo es una herramienta específica.

222
00:12:55,850 --> 00:12:59,410
Así que lo que espero que se lleve de esta 
semana y de los vídeos de la semana anterior,

223
00:12:59,410 --> 00:13:02,819
es que a veces no se debe ejecutar

224
00:13:02,819 --> 00:13:05,319
de forma inmediata en su hoja de cálculo.
De hecho, en

225
00:13:05,319 --> 00:13:06,600
las primeras seis semanas

226
00:13:06,600 --> 00:13:07,360
Le enseñe

227
00:13:07,360 --> 00:13:11,089
todo lo que hay que saber sobre las hojas
de cálculo, y usted puede hacer muchas cosas

228
00:13:11,089 --> 00:13:11,980
con ellas.

229
00:13:11,980 --> 00:13:15,540
Pero a veces también es muy buena estrategia 

230
00:13:15,540 --> 00:13:18,679
alejarse de la hoja de cálculo. No
vaya a su ordenador, 

231
00:13:18,679 --> 00:13:23,259
primero piense acerca del problema, vaya a la 
pizarra y algunas veces podrá usar

232
00:13:23,259 --> 00:13:27,470
una herramienta muy adecuada para la parte
pequeña de su  mejor programa.

233
00:13:27,470 --> 00:13:30,519
Así que, si alguna vez tiene que calcular
un número Bacon

234
00:13:30,519 --> 00:13:35,089
ya sabe que Neo4J, u otra base de datos de 
grafos podría ser una solución mejor

235
00:13:35,089 --> 00:13:36,070
que una hoja de cálculo.

