100:00:00,710 --> 00:00:03,480上周，我们学习了如何计算贝肯数，200:00:03,480 --> 00:00:08,780我们分别使用了Excel和Python这两种软件来完成计算。我希望你们能通过300:00:08,780 --> 00:00:11,900上周的视频和练习了解到400:00:11,900 --> 00:00:14,960使用什么运算工具将影响到500:00:14,960 --> 00:00:19,169有什么可行的解决方案。 如果你用的是Excel，600:00:19,169 --> 00:00:20,029那么你通常习惯使用700:00:20,029 --> 00:00:23,589单元格以及如何引用单元格。800:00:23,589 --> 00:00:26,359如果你想用Excel来运算一份列表，那么你将会900:00:26,359 --> 00:00:29,710使用数组公式，这不是不可行，1000:00:29,710 --> 00:00:33,010而是比较复杂，也会限制你的思维。1100:00:33,010 --> 00:00:36,690相反，如果你用 Python 来解决相同的问题，1200:00:36,690 --> 00:00:39,429就显得十分容易了，因为列表1300:00:39,429 --> 00:00:44,100正是Python所擅长的领域。 你可以提取电子表格里的任意一个范围1400:00:44,100 --> 00:00:48,120并将其导入列表中， 如果你想要在你的列表上1500:00:48,120 --> 00:00:52,329进行某种操作，例如找最小值，你只要1600:00:52,329 --> 00:00:56,409在那个列表中使用MIN函数就可以了。 不必像Excel那样去摆弄1700:00:56,409 --> 00:00:57,800数组公式 。1800:00:57,800 --> 00:01:00,569因为你使用的是Python,1900:01:00,569 --> 00:01:04,239用它来操作列表是很容易的，因为列表已经被内置在Python中2000:01:04,239 --> 00:01:07,199从而能省去很多麻烦。2100:01:07,200 --> 00:01:11,380同样地，这个概念适用于很多不同的情况，如果你使用了2200:01:11,390 --> 00:01:14,890错误的工具2300:01:14,890 --> 00:01:19,040就好比你用锤子敲打螺丝钉一样效率低下，2400:01:19,040 --> 00:01:23,340不仅如此， 选错了工具还会使你的任务更加困难， 同时也限制了你的2500:01:23,340 --> 00:01:27,299想象力。如果你只会使用Excel，就好比一个木匠只会用锤子来固定木材，2600:01:27,299 --> 00:01:31,890这样的木匠永远不会想出用楔形榫来拼接木头的这种办法，2700:01:31,890 --> 00:01:35,969因为用榫来拼接根本不需要钉子2800:01:35,969 --> 00:01:39,369自然也不需要锤子。 所以，如果你一直固守锤子2900:01:39,369 --> 00:01:40,189那么，3000:01:40,189 --> 00:01:45,369你永远不会想出正确的解决方法。 这个道理同样适应于统计学，3100:01:45,369 --> 00:01:48,750如果你总是使用电子表格，3200:01:48,750 --> 00:01:53,009那么有些更简便的解决方案是你永远都不会想到的，3300:01:53,009 --> 00:01:56,229因为它们根本不属于电子表格的范畴，而这一点3400:01:56,229 --> 00:01:58,249也就是我们本周视频的重点！